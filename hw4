import numpy as np
import sympy as sym

A = np.array([[8.0, -3.0, -3.0, 1.0], [-9.0, 8.0, 1.0, -3.0], [-5.0, -2.0, -4.0, 7.0], [3.0, -4.0, -3.0, 2.0]])
B = np.array([[-8.0, -4.0, -7.0, 4.0], [8.0, 0.0, -4.0, 6.0], [4.0, 1.0, 4.0, -6.0], [7.0, -7.0, 7.0, -1.0]])
K = np.array([[9.0, -6.0, -2.0, 5.0], [-7.0, 5.0, 3.0, -4.0], [-5.0, 9.0, 5.0, 9.0], [6.0, -4.0, 1.0, 4.0]])

F = A - B@K
print(F)

A = np.array([[-0.1, -0.4, -0.6], [0.0, 0.8, -0.1], [-0.7, -0.2, 0.0]])
B = np.array([[-0.9, 0.0], [0.9, -0.2], [-0.3, -0.1]])
K = np.array([[0.1, 0.0, 0.7], [0.4, -0.6, 0.8]])
t0 = 0.3
x0 = np.array([-0.1, 0.4, -0.5])
t1 = 0.4

a, b, c = sym.symbols('a, b, c')
x = sym.Matrix([a, b, c])

F = A - B@K
F = sym.Matrix(F)
x0 = sym.Matrix(x0)
x1 = sym.exp(F*(t1-t0))@x0
print(x1.tolist())

A = np.array([[ 0,  1], [ 9, -3]])
B = np.array([[0], [1]])
K = np.array([[29, -12]])
x0 = np.array([ 5, -3])

F = A - B@K
F = sym.Matrix(F)
x0 = sym.Matrix(x0)
t = sym.symbols('t')

xt = sym.exp(F*t)@x0
print(xt)