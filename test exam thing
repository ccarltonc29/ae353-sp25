import numpy as np
import sympy as sym
from scipy import linalg

q1, v2, v1, t = sym.symbols('q1, v2, v1, t')
J_1 = 1.00000000
J_2 = 0.09000000
m_w = 0.50000000
g = 9.81000000
l = 1.00000000
f = sym.Matrix([v1, (t - m_w*g*l*sym.sin(q1))/J_1, (-1*((J_1 + J_2)/J_1)*t + (J_2/J_1)*m_w*g*l*sym.sin(q1))/J_2])
q1e = np.pi
v2e = 0.0
v1e = 0.0
te = 0.0
A_num = sym.lambdify([q1, v1, v2, t], f.jacobian([q1, v1, v2]))
B_num = sym.lambdify([q1, v1, v2, t], f.jacobian([t]))
A = A_num(q1e, v1e, v2e, te)
B = B_num(q1e, v1e, v2e, te)
print(A.tolist())
print(B.tolist())